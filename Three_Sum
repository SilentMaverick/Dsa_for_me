#include <vector>
#include <algorithm>

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        int n = nums.size();

        // 1. Sort the array
        sort(nums.begin(), nums.end());

        // 2. main loop for the first element
        for (int i = 0; i < n - 2; ++i) {
            // skip duplicate values for the first element
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }

            // 3. set up two pointers
            int left = i + 1;
            int right = n - 1;

            // 4. two-pointer loop
            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];

                if (sum == 0) {
                    result.push_back({nums[i], nums[left], nums[right]});

                    // skip duplicate values for the second and third elements
                    while (left < right && nums[left] == nums[left + 1]) {
                        left++;
                    }
                    while (left < right && nums[right] == nums[right - 1]) {
                        right--;
                    }

                    left++;
                    right--;
                } else if (sum < 0) {
                    left++; 
                } else { // sum > 0
                    right--; 
                }
            }
        }
        return result;
    }
};
