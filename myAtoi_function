class Solution {
public:
    int myAtoi(std::string s) {
        int i = 0;
        int n = s.length();
        int sign = 1;
        long result = 0;
        while (i < n && s[i] == ' ') {
            i++;
        }
        if (i < n && (s[i] == '+' || s[i] == '-')) {
            sign = (s[i] == '-') ? -1 : 1;
            i++;
        }
        while (i < n && isdigit(s[i])) {
            int digit = s[i] - '0';
            if (result > numeric_limits<int>::max() / 10 || 
               (result == numeric_limits<int>::max() / 10 && digit > 7)) {
                return (sign == 1) ? numeric_limits<int>::max() : numeric_limits<int>::min();
            }

            result = result * 10 + digit;
            i++;
        }
        return (int)(result * sign);
    }
};
